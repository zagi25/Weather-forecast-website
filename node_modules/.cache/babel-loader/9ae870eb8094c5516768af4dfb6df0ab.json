{"ast":null,"code":"var _jsxFileName = \"/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/Chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data,\n  setIndex\n}) => {\n  // console.log(data.map((day) => day.temp.day));\n  let chartData = {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    datasets: [{\n      label: \"Temperature\",\n      data: data.map(day => day.temp.day)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        onHover: (event, chartElement) => {\n          /*event.target.style.cursor = chartElement[0] ? \"pointer\" : \"default\";*/\n        },\n        onClick: function (evt, item) {\n          if (item.length > 0) {\n            setIndex(item[0].index);\n          }\n        },\n        elements: {\n          point: {\n            pointRadius: 10\n          },\n          line: {\n            tension: 0.18\n          }\n        },\n        plugins: {\n          title: {\n            display: false,\n            text: \"Cryptocurrency prices\"\n          },\n          legend: {\n            display: false,\n            position: \"bottom\" // options.scales[scaleId].grid\n\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            display: true,\n            grid: {\n              display: false\n            },\n            suggestedMin: 0,\n            suggestedMax: 40\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart; //  setChartData({\n//    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n//    datasets: [\n//      {\n//        label: \"Temperature\",\n//        data: data.daily.map((day) => day.temp.day),\n//      },\n//    ],\n//  });\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/Chart.js"],"names":["Line","Chart","data","setIndex","chartData","labels","datasets","label","map","day","temp","onHover","event","chartElement","onClick","evt","item","length","index","elements","point","pointRadius","line","tension","plugins","title","display","text","legend","position","scales","x","grid","y","suggestedMin","suggestedMax"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACpC;AACA,MAAIC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CADM;AAEdC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,aADT;AAEEL,MAAAA,IAAI,EAAEA,IAAI,CAACM,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASD,GAA3B;AAFR,KADQ;AAFI,GAAhB;AAUA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEL,SADR;AAEE,MAAA,OAAO,EAAE;AACPO,QAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,YAAR,KAAyB;AAChC;AACD,SAHM;AAKPC,QAAAA,OAAO,EAAE,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC5B,cAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBd,YAAAA,QAAQ,CAACa,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAT,CAAR;AACD;AACF,SATM;AAUPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WADC;AAIRC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAE;AADL;AAJE,SAVH;AAkBPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,KADJ;AAELC,YAAAA,IAAI,EAAE;AAFD,WADA;AAKPC,UAAAA,MAAM,EAAE;AACNF,YAAAA,OAAO,EAAE,KADH;AAENG,YAAAA,QAAQ,EAAE,QAFJ,CAGN;;AAHM;AALD,SAlBF;AA8BPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACDL,YAAAA,OAAO,EAAE,IADR;AAEDM,YAAAA,IAAI,EAAE;AACJN,cAAAA,OAAO,EAAE;AADL;AAFL,WADG;AAONO,UAAAA,CAAC,EAAE;AACDP,YAAAA,OAAO,EAAE,IADR;AAEDM,YAAAA,IAAI,EAAE;AACJN,cAAAA,OAAO,EAAE;AADL,aAFL;AAKDQ,YAAAA,YAAY,EAAE,CALb;AAMDC,YAAAA,YAAY,EAAE;AANb;AAPG;AA9BD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAlED;;KAAMlC,K;AAoEN,eAAeA,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Line } from \"react-chartjs-2\";\n\nconst Chart = ({ data, setIndex }) => {\n  // console.log(data.map((day) => day.temp.day));\n  let chartData = {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    datasets: [\n      {\n        label: \"Temperature\",\n        data: data.map((day) => day.temp.day),\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Line\n        data={chartData}\n        options={{\n          onHover: (event, chartElement) => {\n            /*event.target.style.cursor = chartElement[0] ? \"pointer\" : \"default\";*/\n          },\n\n          onClick: function (evt, item) {\n            if (item.length > 0) {\n              setIndex(item[0].index);\n            }\n          },\n          elements: {\n            point: {\n              pointRadius: 10,\n            },\n            line: {\n              tension: 0.18,\n            },\n          },\n          plugins: {\n            title: {\n              display: false,\n              text: \"Cryptocurrency prices\",\n            },\n            legend: {\n              display: false,\n              position: \"bottom\",\n              // options.scales[scaleId].grid\n            },\n          },\n\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                display: false,\n              },\n            },\n            y: {\n              display: true,\n              grid: {\n                display: false,\n              },\n              suggestedMin: 0,\n              suggestedMax: 40,\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n\n//  setChartData({\n//    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n//    datasets: [\n//      {\n//        label: \"Temperature\",\n//        data: data.daily.map((day) => day.temp.day),\n//      },\n//    ],\n//  });\n"]},"metadata":{},"sourceType":"module"}
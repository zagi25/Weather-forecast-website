{"ast":null,"code":"var _jsxFileName = \"/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/Chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data,\n  setIndex\n}) => {\n  let chartData = {\n    labels: data.map(day => moment.unix(day.dt).format(\"MMM Do\")),\n    datasets: [{\n      label: \"Temperature\",\n      borderColor: \"red\",\n      data: data.map(day => Math.round(day.temp.day))\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        onClick: function (evt, item) {\n          if (item.length > 0) {\n            setIndex(item[0].index);\n          }\n        },\n        elements: {\n          point: {\n            pointRadius: 10\n          },\n          line: {\n            tension: 0.18\n          }\n        },\n        plugins: {\n          title: {\n            display: false,\n            text: \"Cryptocurrency prices\"\n          },\n          legend: {\n            display: false,\n            position: \"bottom\"\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            grid: {\n              display: false,\n              borderColor: \"white\"\n            },\n            ticks: {\n              color: \"white\"\n            }\n          },\n          y: {\n            display: true,\n            grid: {\n              display: false,\n              borderColor: \"white\"\n            },\n            ticks: {\n              color: \"white\"\n            },\n            suggestedMin: 0,\n            suggestedMax: 40\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart; //  setChartData({\n//    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n//    datasets: [\n//      {\n//        label: \"Temperature\",\n//        data: data.daily.map((day) => day.temp.day),\n//      },\n//    ],\n//  });\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/Chart.js"],"names":["Line","moment","Chart","data","setIndex","chartData","labels","map","day","unix","dt","format","datasets","label","borderColor","Math","round","temp","onClick","evt","item","length","index","elements","point","pointRadius","line","tension","plugins","title","display","text","legend","position","scales","x","grid","ticks","color","y","suggestedMin","suggestedMax"],"mappings":";AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACpC,MAAIC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAEH,IAAI,CAACI,GAAL,CAAUC,GAAD,IAAUP,MAAM,CAACQ,IAAP,CAAYD,GAAG,CAACE,EAAhB,EAAoBC,MAApB,CAA2B,QAA3B,CAAnB,CADM;AAEdC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,aADT;AAELC,MAAAA,WAAW,EAAC,KAFP;AAGEX,MAAAA,IAAI,EAAEA,IAAI,CAACI,GAAL,CAAUC,GAAD,IAASO,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,IAAJ,CAAST,GAApB,CAAlB;AAHR,KADQ;AAFI,GAAhB;AAWA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEH,SADR;AAEE,MAAA,OAAO,EAAE;AACda,QAAAA,OAAO,EAAE,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACrB,cAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnBjB,YAAAA,QAAQ,CAACgB,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAT,CAAR;AACD;AACF,SALM;AAMPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WADC;AAIRC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAE;AADL;AAJE,SANH;AAcPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,KADJ;AAELC,YAAAA,IAAI,EAAE;AAFD,WADA;AAKPC,UAAAA,MAAM,EAAE;AACNF,YAAAA,OAAO,EAAE,KADH;AAENG,YAAAA,QAAQ,EAAE;AAFJ;AALD,SAdF;AAyBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACDL,YAAAA,OAAO,EAAE,IADR;AAEDM,YAAAA,IAAI,EAAE;AACJN,cAAAA,OAAO,EAAE,KADL;AAElBhB,cAAAA,WAAW,EAAE;AAFK,aAFL;AAMRuB,YAAAA,KAAK,EAAG;AACPC,cAAAA,KAAK,EAAE;AADA;AANA,WADG;AAYNC,UAAAA,CAAC,EAAE;AACDT,YAAAA,OAAO,EAAE,IADR;AAEDM,YAAAA,IAAI,EAAE;AACJN,cAAAA,OAAO,EAAE,KADL;AAElBhB,cAAAA,WAAW,EAAE;AAFK,aAFL;AAMRuB,YAAAA,KAAK,EAAG;AACRC,cAAAA,KAAK,EAAE;AADC,aANA;AASDE,YAAAA,YAAY,EAAE,CATb;AAUDC,YAAAA,YAAY,EAAE;AAVb;AAZG;AAzBD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CAtED;;KAAMvC,K;AAwEN,eAAeA,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst Chart = ({ data, setIndex }) => {\n  let chartData = {\n    labels: data.map((day) => (moment.unix(day.dt).format(\"MMM Do\"))),\n    datasets: [\n      {\n        label: \"Temperature\",\n\tborderColor:\"red\",\n        data: data.map((day) => Math.round(day.temp.day)),\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Line\n        data={chartData}\n        options={{\n\t  onClick: function (evt, item) {\n            if (item.length > 0) {\n              setIndex(item[0].index);\n            }\n          },\n          elements: {\n            point: {\n              pointRadius: 10,\n            },\n            line: {\n              tension: 0.18,\n            },\n          },\n          plugins: {\n            title: {\n              display: false,\n              text: \"Cryptocurrency prices\",\n            },\n            legend: {\n              display: false,\n              position: \"bottom\",\n            },\n          },\n\n          scales: {\n            x: {\n              display: true,\n              grid: {\n                display: false,\n\t\tborderColor: \"white\",\t      \n              },\n\t      ticks : {\n\t\t      color: \"white\",\n\n\t      },\n            },\n            y: {\n              display: true,\n              grid: {\n                display: false,\n\t\tborderColor: \"white\",\t      \n              },\n\t      ticks : {\n\t\t     color: \"white\",\n\t      },\n              suggestedMin: 0,\n              suggestedMax: 40,\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n\n//  setChartData({\n//    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n//    datasets: [\n//      {\n//        label: \"Temperature\",\n//        data: data.daily.map((day) => day.temp.day),\n//      },\n//    ],\n//  });\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport Current from \"./Current\";\nimport Loading from \"./Loading\";\nimport Chart from \"./Chart\"; // import Daily from \"./Daily\";\n\nimport { FaSearch } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState({\n    lat: null,\n    lon: null\n  });\n  const [input, setInput] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState({\n    date_time: null,\n    temp: null,\n    humidity: null,\n    wind_speed: null,\n    id: null,\n    state: \"\",\n    daily: []\n  });\n  const [cityName, setCityName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [index, setIndex] = useState(0);\n  const [size, setSize] = useState(window.innerWidth);\n  const isMounted = useRef(0);\n  const url1 = `http://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.lon}&units=metric&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n  const url2 = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n  const url3 = `http://api.openweathermap.org/geo/1.0/reverse?lat=${location.lat}&lon=${location.lon}&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCity(input);\n    setInput(\"\");\n    isMounted.current = 3;\n  };\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLocation({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude\n      });\n      isMounted.current = 1;\n    }, function (error) {\n      setCity(\"London\");\n      setLocation({\n        lat: 51.5085,\n        lon: -0.1257\n      });\n      isMounted.current = 3;\n    }, {\n      enableHighAccuracy: true,\n      maximumAge: 30000,\n      timeout: 27000\n    });\n  }, []);\n  useEffect(() => {}, [data]);\n  useEffect(() => {\n    const fetchLoLa = async () => {\n      try {\n        const response1 = await fetch(url2);\n        const cityd = await response1.json();\n        setLocation({\n          lat: cityd[0].lat,\n          lon: cityd[0].lon\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (isMounted.current === 3) {\n      fetchLoLa();\n    }\n  }, [city, url2]);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(url1);\n        const weather = await response.json();\n        setData({\n          date_time: weather.current.dt,\n          temp: weather.current.temp,\n          humidity: weather.current.humidity,\n          wind_speed: weather.current.wind_speed,\n          id: weather.current.weather[0].id,\n          state: weather.current.weather[0].description,\n          daily: weather.daily\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      setIsLoading(false);\n    };\n\n    const fetchCityN = async () => {\n      try {\n        const response = await fetch(url3);\n        const name = await response.json();\n        setCityName(name[0].name);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (isMounted.current === 1) {\n      fetchCityN();\n      isMounted.current = 2;\n    }\n\n    if (isMounted.current === 2 || isMounted.current === 3) {\n      fetchWeather();\n      fetchCityN();\n      setTime(moment().format(\"HH:mm, dd, MMM Do, YYYY\"));\n    }\n  }, [location, url1, url3]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkSize);\n    return () => {\n      window.removeEventListener(\"resize\", checkSize);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Enter city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          onClick: handleSubmit,\n          className: \"search-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: /*#__PURE__*/_jsxDEV(Current, {\n          time: time,\n          cityName: cityName,\n          data: data,\n          loading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          data: data.daily,\n          setIndex: setIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"o66DU1xtOF7AFG+e5hMMWCXB4Xk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zagi25/Ucenje/git/Weather-forecast-website/weather/src/App.js"],"names":["useState","useEffect","useRef","moment","Current","Loading","Chart","FaSearch","App","location","setLocation","lat","lon","input","setInput","time","setTime","city","setCity","data","setData","date_time","temp","humidity","wind_speed","id","state","daily","cityName","setCityName","isLoading","setIsLoading","index","setIndex","size","setSize","window","innerWidth","isMounted","url1","url2","url3","handleSubmit","e","preventDefault","current","checkSize","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","enableHighAccuracy","maximumAge","timeout","fetchLoLa","response1","fetch","cityd","json","console","log","fetchWeather","response","weather","dt","description","fetchCityN","name","format","addEventListener","removeEventListener","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport Current from \"./Current\";\nimport Loading from \"./Loading\";\nimport Chart from \"./Chart\";\n// import Daily from \"./Daily\";\nimport { FaSearch } from \"react-icons/fa\";\n\nfunction App() {\n  const [location, setLocation] = useState({ lat: null, lon: null });\n  const [input, setInput] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState({\n    date_time: null,\n    temp: null,\n    humidity: null,\n    wind_speed: null,\n    id: null,\n    state: \"\",\n    daily: [],\n  });\n  const [cityName, setCityName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [index, setIndex] = useState(0);\n  const [size, setSize] = useState(window.innerWidth);\n  const isMounted = useRef(0);\n  const url1 = `http://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.lon}&units=metric&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n  const url2 = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n  const url3 = `http://api.openweathermap.org/geo/1.0/reverse?lat=${location.lat}&lon=${location.lon}&appid=0a0015fb406229dfc0d39446cf26e8e4`;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCity(input);\n    setInput(\"\");\n    isMounted.current = 3;\n  };\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        setLocation({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        });\n        isMounted.current = 1;\n      },\n      function (error) {\n        setCity(\"London\");\n        setLocation({ lat: 51.5085, lon: -0.1257 });\n        isMounted.current = 3;\n      },\n      {\n        enableHighAccuracy: true,\n        maximumAge: 30000,\n        timeout: 27000,\n      }\n    );\n  }, []);\n\n  useEffect(() => {}, [data]);\n\n  useEffect(() => {\n    const fetchLoLa = async () => {\n      try {\n        const response1 = await fetch(url2);\n        const cityd = await response1.json();\n        setLocation({ lat: cityd[0].lat, lon: cityd[0].lon });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (isMounted.current === 3) {\n      fetchLoLa();\n    }\n  }, [city, url2]);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(url1);\n        const weather = await response.json();\n        setData({\n          date_time: weather.current.dt,\n          temp: weather.current.temp,\n          humidity: weather.current.humidity,\n          wind_speed: weather.current.wind_speed,\n          id: weather.current.weather[0].id,\n          state: weather.current.weather[0].description,\n          daily: weather.daily,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      setIsLoading(false);\n    };\n    const fetchCityN = async () => {\n      try {\n        const response = await fetch(url3);\n        const name = await response.json();\n        setCityName(name[0].name);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (isMounted.current === 1) {\n      fetchCityN();\n      isMounted.current = 2;\n    }\n    if (isMounted.current === 2 || isMounted.current === 3) {\n      fetchWeather();\n      fetchCityN();\n      setTime(moment().format(\"HH:mm, dd, MMM Do, YYYY\"));\n    }\n  }, [location, url1, url3]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkSize);\n    return () => {\n      window.removeEventListener(\"resize\", checkSize);\n    };\n  });\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <main>\n          <form onSubmit={handleSubmit} className=\"form-control\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Enter city\"\n            />\n            <FaSearch onClick={handleSubmit} className=\"search-btn\" />\n          </form>\n          <div className=\"current\">\n            <Current\n              time={time}\n              cityName={cityName}\n              data={data}\n              loading={isLoading}\n            />\n          </div>\n          <div className=\"underline\"></div>\n\n          <div className=\"chart\">\n            <Chart data={data.daily} setIndex={setIndex} />\n          </div>\n\n          {/* {data.daily.map((day, index) => {\n            return (\n              <div key={index} className={`daily daily${index}`}>\n                <Daily day={day} size={size} />\n              </div>\n            );\n          })} */}\n        </main>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}